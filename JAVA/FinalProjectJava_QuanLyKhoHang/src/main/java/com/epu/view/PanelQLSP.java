/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.epu.view;

import com.epu.controller.CategoryController;
import com.epu.controller.ProductController;
import com.epu.model.Category;
import com.epu.model.DateLabelFormatter;
import com.epu.model.ExcelProduct;
import com.epu.model.Product;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author ASUS
 */
public class PanelQLSP extends javax.swing.JPanel {
 
    private JDatePickerImpl datePicker;
    private List<Product> products = new ProductController().getAll();
    private Product choosenProduct = new Product();
    public PanelQLSP() {
        initComponents();
        addDatePickerComponent();
        fillDataTableProducts(products);
        fillCbboxCateName();
    }
    
      private void addDatePickerComponent() {
        // Tạo model và panel cho JDatePicker
        UtilDateModel model = new UtilDateModel();
        Properties p = new Properties();
        p.put("text.today", "Today");
        p.put("text.month", "Month");
        p.put("text.year", "Year");

        JDatePanelImpl datePanel = new JDatePanelImpl(model, p);
        datePicker = new JDatePickerImpl(datePanel, new DateLabelFormatter());

        // Thêm JDatePicker vào JPanel đã tạo trong GUI Builder
        datePickerPanel.setLayout(new java.awt.BorderLayout());
        datePickerPanel.add(datePicker);
        datePickerPanel.revalidate();
        datePickerPanel.repaint();
    }
     // Lấy giá trị ngày từ JDatePicker
    public Date getSelectedDate() {
        
        if (datePicker.getModel().getValue() != null) {
            return (Date) datePicker.getModel().getValue();  // Lấy giá trị ngày từ model của datePicker
        }
        return null; 
    }
    public void setDateToPicker(java.util.Date utilDate) {
    // Tạo một đối tượng Calendar và đặt ngày từ utilDate
    Calendar cal = Calendar.getInstance();
    cal.setTime(utilDate);
    // Gán giá trị cho model của datePicker
    datePicker.getModel().setDate(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH));
    datePicker.getModel().setSelected(true); 
}

    
    private void fillDataTableProducts(List<Product> ps) {

        DefaultTableModel tableModel = new DefaultTableModel(new Object[][]{},new String[]{"ProductId", "ProductName", "Unit", "Price", "Description", "CreateAt", "CategoryId"}) {
            // Ghi đè isCellEditable để ngăn chỉnh sửa
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Không cho phép chỉnh sửa trực tiếp từng ô
            }
        };
        // Đặt model cho tableProducts
        tableProducts.setModel(tableModel);
        // Đổ dữ liệu vào bảng
        if (!ps.isEmpty()) {
            for (var s : ps) {
                Object[] rowData = { s.getProductId(), s.getProductName(), s.getUnit(), s.getPrice(),  s.getDescription(), s.getCreateAt(), s.getCategoryId() };
                tableModel.addRow(rowData);
            }
        }
    }
    private void fillCbboxCateName()
    {
        List<Category> cs = new CategoryController().getAll();
        if(!cs.isEmpty())
        {
            List<String> CateNames = new ArrayList<>();
            for(var n : cs)
                CateNames.add(n.getCategoryName());
            
            DefaultComboBoxModel cbbCateName = (DefaultComboBoxModel) cbboxCategoryName.getModel();
            for(var n : CateNames)
                cbbCateName.addElement(n);
        }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tableProducts = new javax.swing.JTable();
        PanelFindProduct = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtFindProductName = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtGiaTu = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtGiaDen = new javax.swing.JTextField();
        btnResetTable = new javax.swing.JButton();
        panelProductFields = new javax.swing.JPanel();
        txtUnit = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        lbErrorProductName = new javax.swing.JLabel();
        lbErrorUnit = new javax.swing.JLabel();
        lbErrorPrice = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tAreaDesciption = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        lbErrorDescrip = new javax.swing.JLabel();
        lbErrorCreateAt = new javax.swing.JLabel();
        cbboxCategoryName = new javax.swing.JComboBox<>();
        lbErrorCategoryName = new javax.swing.JLabel();
        datePickerPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnExportExcel = new javax.swing.JButton();
        btnImportExcel = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1400, 700));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        tableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableProducts);

        PanelFindProduct.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Lọc sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setText("Tìm kiếm sản phẩm :");

        txtFindProductName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnFind.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFind.setText("Find");
        btnFind.setFocusPainted(false);
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setText("Giá từ :");

        txtGiaTu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("Giá đến :");

        txtGiaDen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnResetTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetTable.setText("ResetTable");
        btnResetTable.setFocusPainted(false);
        btnResetTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFindProductLayout = new javax.swing.GroupLayout(PanelFindProduct);
        PanelFindProduct.setLayout(PanelFindProductLayout);
        PanelFindProductLayout.setHorizontalGroup(
            PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFindProductLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PanelFindProductLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFindProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelFindProductLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtGiaTu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtGiaDen, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61)
                .addGroup(PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnResetTable)
                    .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        PanelFindProductLayout.setVerticalGroup(
            PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFindProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addGroup(PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFindProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFindProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGiaDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnResetTable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtGiaTu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        panelProductFields.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "ProductFields", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        txtProductName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lbErrorProductName.setForeground(new java.awt.Color(255, 51, 51));

        lbErrorUnit.setForeground(new java.awt.Color(255, 51, 51));

        lbErrorPrice.setForeground(new java.awt.Color(255, 51, 51));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel12.setText("ProductName :");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel13.setText("Unit :");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel14.setText("Price :");

        tAreaDesciption.setColumns(20);
        tAreaDesciption.setRows(5);
        jScrollPane3.setViewportView(tAreaDesciption);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel15.setText("Description :");

        lbErrorDescrip.setForeground(new java.awt.Color(255, 51, 51));

        lbErrorCreateAt.setForeground(new java.awt.Color(255, 51, 51));

        cbboxCategoryName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lbErrorCategoryName.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout datePickerPanelLayout = new javax.swing.GroupLayout(datePickerPanel);
        datePickerPanel.setLayout(datePickerPanelLayout);
        datePickerPanelLayout.setHorizontalGroup(
            datePickerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        datePickerPanelLayout.setVerticalGroup(
            datePickerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 81, Short.MAX_VALUE)
        );

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel16.setText("CreateAt :");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel17.setText("Category :");

        btnInsert.setText("New");
        btnInsert.setFocusPainted(false);
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setFocusPainted(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setFocusPainted(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setText("Reset Fields");
        btnReset.setFocusPainted(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnExportExcel.setText("Xuất Excel");
        btnExportExcel.setFocusPainted(false);
        btnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelActionPerformed(evt);
            }
        });

        btnImportExcel.setText("Nhập Excel");
        btnImportExcel.setFocusPainted(false);
        btnImportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProductFieldsLayout = new javax.swing.GroupLayout(panelProductFields);
        panelProductFields.setLayout(panelProductFieldsLayout);
        panelProductFieldsLayout.setHorizontalGroup(
            panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProductFieldsLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInsert)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExportExcel)
                    .addComponent(btnUpdate))
                .addGap(84, 84, 84)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete)
                    .addComponent(btnImportExcel))
                .addContainerGap(95, Short.MAX_VALUE))
            .addGroup(panelProductFieldsLayout.createSequentialGroup()
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelProductFieldsLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbErrorCreateAt, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbboxCategoryName, javax.swing.GroupLayout.Alignment.LEADING, 0, 250, Short.MAX_VALUE)
                                .addComponent(lbErrorCategoryName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(datePickerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                            .addComponent(lbErrorDescrip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelProductFieldsLayout.createSequentialGroup()
                        .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelProductFieldsLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jLabel14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductFieldsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelProductFieldsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbErrorProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelProductFieldsLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbErrorUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelProductFieldsLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbErrorPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelProductFieldsLayout.setVerticalGroup(
            panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductFieldsLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbErrorProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addComponent(lbErrorUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbErrorPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbErrorDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelProductFieldsLayout.createSequentialGroup()
                        .addComponent(datePickerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbErrorCreateAt, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbboxCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)))
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbErrorCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelProductFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImportExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(panelProductFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(PanelFindProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelProductFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(PanelFindProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        try {
            String proName = txtProductName.getText();
            String unit = txtUnit.getText();
            float price = Float.parseFloat(txtPrice.getText());
            String descrip = tAreaDesciption.getText();
            Date createDate =  getSelectedDate();
            
            int cateId = 0;
            
            String cateName = String.valueOf(cbboxCategoryName.getSelectedItem());
            
            List<Category> cs = new CategoryController().getAll();
            
            for(var c : cs)
                if(c.getCategoryName().equals(cateName))
                    cateId = c.getCategoyId();
            
            // Validate các field
            boolean ck = true;        
            if(proName.isEmpty() && proName.length() > 5)
            {
                lbErrorProductName.setText("Vui lòng nhập ProductName và ProductName > 5 ký tự");
                ck = false;
            }
            else
                lbErrorProductName.setText("");   
            
            if(unit.isEmpty())
            {
                lbErrorUnit.setText("Vui lòng nhập Unit");
                ck = false;
            }
            else
                lbErrorUnit.setText("");   
            
            if(txtPrice.getText().isEmpty() && price > 1000)
            {
                lbErrorPrice.setText("Vui lòng nhập Price và Price > 1000 đồng");
                ck = false;
            }
            else
                lbErrorPrice.setText("");   
            
            if(descrip.isEmpty())
            {
                lbErrorDescrip.setText("Vui lòng nhập Description");
                ck = false;
            }
            else
                lbErrorDescrip.setText("");   
            
            if(cateName.isEmpty())
            {
                lbErrorCategoryName.setText("Vui lòng chọn Category");
                ck = false;
            }
            else
                lbErrorCategoryName.setText("");   
            
            if(String.valueOf(createDate).isEmpty())
            {
                lbErrorCreateAt.setText("Vui lòng chọn ngày tháng tạo mới");
                ck = false;
            }
            else 
                lbErrorCreateAt.setText("");
            
            if(ck)
            {
                Product p = new Product(proName, unit, price, descrip, createDate, cateId);
                if(new ProductController().Insert(p))
                {
                    JOptionPane.showMessageDialog(this, "Insert success !");
                    fillDataTableProducts(new ProductController().getAll());
                    resetFields();
                }
                else 
                    JOptionPane.showMessageDialog(this, "Insert fail !");
            } 
            
        } catch(Exception e)
        {
            System.out.println("Error Insert : "+e.getMessage());
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String proName = txtProductName.getText();
        String unit = txtUnit.getText();
        float price = Float.parseFloat(txtPrice.getText());
        String descrip = tAreaDesciption.getText();
        Date createDate = getSelectedDate();

        int cateId = 0;

        String cateName = String.valueOf(cbboxCategoryName.getSelectedItem());
        List<Category> cs = new CategoryController().getAll();
        for(var c : cs)
            if(c.getCategoryName().equals(cateName))
                cateId = c.getCategoyId();
        
        Product p = new Product(choosenProduct.getProductId(),proName, unit, price, descrip, createDate, cateId);
        
        if(new ProductController().Update(p))
        {
            JOptionPane.showMessageDialog(this, "Update success !");
            fillDataTableProducts(new ProductController().getAll());
            resetFields();
        }
        else 
            JOptionPane.showMessageDialog(this, "Update fail !");
      
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắn xóa không", "Xác nhận xóa Product", JOptionPane.YES_NO_OPTION);
        
        if(confirm == JOptionPane.YES_OPTION)
        {
            if (new ProductController().Delete(choosenProduct.getProductId())) {
                JOptionPane.showMessageDialog(this, "Delete success !");
                fillDataTableProducts(new ProductController().getAll());
                resetFields();
            } else
                JOptionPane.showMessageDialog(this, "Delete fail !");
        }
        else 
            JOptionPane.showMessageDialog(this, "Delete cancel !");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportExcelActionPerformed
        // Tạo ra fileChooser để lưu file
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn nơi lưu file Excel");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Excel Files","xlsx" ,"xls") );
        int userSelect = fileChooser.showSaveDialog(this);
        
        if(userSelect == JFileChooser.APPROVE_OPTION)
        {
            File fileSave = fileChooser.getSelectedFile();
            String filePath = fileSave.getAbsolutePath();
            if(!filePath.endsWith(".xlsx"))
                filePath += ".xlsx";
            
            new ExcelProduct().exportToExcel(filePath, tableProducts, "Product Data");
            JOptionPane.showMessageDialog(this, "Xuất data thành công");  
        }    
    }//GEN-LAST:event_btnExportExcelActionPerformed

    private void btnImportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportExcelActionPerformed
        JFileChooser fchoose = new JFileChooser();
        fchoose.setDialogTitle("Chọn file Excel muốn import");
        int result = fchoose.showOpenDialog(this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            String filePath = fchoose.getSelectedFile().getAbsolutePath();
            List<Product> prs = new ExcelProduct().importToExcel(filePath);
            
            boolean ck = true;
            for(var p : prs)
                if(new ProductController().Insert(p) == false)
                    ck = false; 
            
            if(ck)
            {
                JOptionPane.showMessageDialog(this, "Import thành công");
                fillDataTableProducts(new ProductController().getAll());
            }
            else
                JOptionPane.showMessageDialog(this, "Import thất bại");
            
            
        }
    }//GEN-LAST:event_btnImportExcelActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        String nameP = txtFindProductName.getText();
        Float fromP = txtGiaTu.getText().isEmpty() ? 0 : Float.parseFloat(txtGiaTu.getText());
        Float toP = txtGiaDen.getText().isEmpty() ? 0 : Float.parseFloat(txtGiaDen.getText());
        List<Product> searchPs = new ProductController().searchNamePrice(nameP, fromP, toP);
        
        if(searchPs != null)
            fillDataTableProducts(searchPs);
        
    }//GEN-LAST:event_btnFindActionPerformed

    private void tableProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductsMouseClicked
        int row = this.tableProducts.getSelectedRow();
        int Msp = (int) (this.tableProducts.getModel().getValueAt(row, 0));
        try {
            choosenProduct = new ProductController().getById(Msp);
        } catch (SQLException ex) {
            Logger.getLogger(PanelQLSP.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(choosenProduct != null)
        {
            txtProductName.setText(choosenProduct.getProductName());
            txtUnit.setText(choosenProduct.getUnit());
            txtPrice.setText(String.valueOf(choosenProduct.getPrice()));
            tAreaDesciption.setText(choosenProduct.getDescription());
            setDateToPicker(choosenProduct.getCreateAt());
            List<Category> categories =  new CategoryController().getAll();
            int cateId = choosenProduct.getCategoryId();
            
            String cateName = "";
            for(var c : categories)
                if(cateId == c.getCategoyId())
                {
                    cateName = c.getCategoryName();
                    break;
                }
            cbboxCategoryName.setSelectedItem(cateName);
            btnInsert.setEnabled(false);
        }
        
    }//GEN-LAST:event_tableProductsMouseClicked

    private void resetFields()
    {
        txtProductName.setText("");
        txtUnit.setText("");
        txtPrice.setText("");
        cbboxCategoryName.setSelectedIndex(0);
        tAreaDesciption.setText("");
        datePicker.getModel().setSelected(false);
    }
    
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetFields();
        btnInsert.setEnabled(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnResetTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetTableActionPerformed
        fillDataTableProducts(products);
        txtGiaDen.setText("");
        txtGiaTu.setText("");
        txtFindProductName.setText("");
    }//GEN-LAST:event_btnResetTableActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelFindProduct;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExportExcel;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnImportExcel;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnResetTable;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbboxCategoryName;
    private javax.swing.JPanel datePickerPanel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbErrorCategoryName;
    private javax.swing.JLabel lbErrorCreateAt;
    private javax.swing.JLabel lbErrorDescrip;
    private javax.swing.JLabel lbErrorPrice;
    private javax.swing.JLabel lbErrorProductName;
    private javax.swing.JLabel lbErrorUnit;
    private javax.swing.JPanel panelProductFields;
    private javax.swing.JTextArea tAreaDesciption;
    private javax.swing.JTable tableProducts;
    private javax.swing.JTextField txtFindProductName;
    private javax.swing.JTextField txtGiaDen;
    private javax.swing.JTextField txtGiaTu;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
}
